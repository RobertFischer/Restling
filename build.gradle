allprojects {
  apply plugin: 'idea'

  group = 'restling'
  assert restlingVersion: "Please provide a version for Restling (this project)"
  version = restlingVersion

  afterEvaluate {
    if(idea.project) {
      idea.project.ipr {
          withXml { provider ->
              provider.node.component
                      .find { it.@name == 'VcsDirectoryMappings' }
                      .mapping.@vcs = 'Git'
          }
      }
    }
  }
}

subprojects {
  apply plugin: 'java'
  apply plugin: 'groovy'
  apply plugin: 'maven'

  sourceCompatibility = 8
  targetCompatibility = 8

  repositories {
      mavenLocal()
      mavenCentral()
      maven {
          name = "Restlet Maven Repository"
          url = "http://maven.restlet.com"
      }
      jcenter()
  }
  dependencies {
    assert restletVersion: "Please provide a version for restlet"
    compile "org.restlet.jee:org.restlet:$restletVersion"
    ["jackson", "servlet", "fileupload", "httpclient", "slf4j"].each { ext ->
      compile "org.restlet.jee:org.restlet.ext.$ext:$restletVersion"
    }

    // 2.5 is the current version as of right now, and org.restlet.ext.jackson is behind
    [
      core: ["core", "databind", "annotations"],
      datatype: ["datatype-jdk8", "datatype-jsr310", "datatype-guava", "datatype-joda"],
      module: ["module-parameter-names"]
    ].each { pkg, exts ->
      exts.each { ext ->
        compile "com.fasterxml.jackson.$pkg:jackson-$ext:[2.6.0,2.7)"
      }
    }

    assert groovyVersion: "Please provide a version for Groovy"
    compile "org.codehaus.groovy:groovy-all:$groovyVersion"

    compile 'javax.servlet:javax.servlet-api:[3.0.1,4)'

    compile "com.google.guava:guava:[18.0,19)"

    testCompile 'org.eclipse.jetty:jetty-webapp:[9.3,10)'
    testCompile 'junit:junit:[4.12,5)'
    testCompile "org.slf4j:slf4j-simple:[1.7.12,1.8)"

    /*
    * Spock
    */
    testCompile "org.spockframework:spock-core:1.0-groovy-2.4"
    // optional dependencies for using Spock
    testCompile "org.hamcrest:hamcrest-core:[1.3,2)" // only necessary if Hamcrest matchers are used
    testRuntime "cglib:cglib-nodep:[3.1,4)"          // allows mocking of classes (in addition to interfaces)
    testRuntime "org.objenesis:objenesis:[2.1,3)"
    // allows mocking of classes without default constructor (together with CGLIB)

  }

  configurations {
      [runtime, testRuntime]*.exclude group: "org.slf4j", module: "slf4j-nop"
      runtime.exclude group: "org.slf4j", module: "slf4j-simple"
  }
}
